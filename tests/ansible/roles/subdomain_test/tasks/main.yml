---
- name: Test service accessibility
  ansible.builtin.uri:
    url: "http://{{ item.name }}{{ item.path | default('') }}"
    method: GET
    status_code: "{{ item.expected_status | default(expected_status) }}"
    timeout: "{{ health_check_timeout }}"
    validate_certs: no
    follow_redirects: all
    return_content: yes
  register: domain_test
  retries: "{{ health_check_retries }}"
  delay: "{{ health_check_delay }}"
  until: domain_test is succeeded
  loop: "{{ test_domains }}"
  ignore_errors: yes
  changed_when: false
  loop_control:
    label: "{{ item.name }}"

- name: Validate JSON responses
  ansible.builtin.assert:
    that:
      - item.item.check_json | default(false) | bool == false or item.content is defined
      - item.item.check_json | default(false) | bool == false or item.json is defined
      - >
        not (item.item.check_json | default(false) | bool) or
        item.item.expected_json | default({}) | dict2items | selectattr('key', 'defined') | list | length == 0 or
        item.json is defined and (item.json | dict2items | selectattr('key', 'in', item.item.expected_json) | list | length == item.item.expected_json | dict2items | selectattr('key', 'defined') | list | length)
      - >
        not (item.item.check_json | default(false) | bool) or
        item.item.expected_json | dict2items | selectattr('key', 'defined') | list | length == 0 or
        item.json is defined and (item.json | dict2items | json_query("[?key in `item.item.expected_json | dict2items | map(attribute='key') | list`]") | 
        map(attribute='value') | list == item.item.expected_json | dict2items | map(attribute='value') | list)
  loop: "{{ domain_test.results }}"
  loop_control:
    label: "{{ item.item.name }}"
  when:
    - item is not failed
    - item.item.check_json | default(false) | bool
    - item.item.expected_json is defined
  ignore_errors: yes

- name: Fail if any domain is not accessible
  ansible.builtin.fail:
    msg: >
      Health check failed for {{ item.item.name | default('unknown') }}.
      Status: {{ item.status | default('unknown') }}
      Error: {{ item.msg | default('Unknown error') }}
  loop: "{{ domain_test.results }}"
  when: item is failed
  loop_control:
    label: "{{ item.item.name | default('unknown') }}"
